"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var dist_1 = __importDefault(require("@sindresorhus/is/dist"));
var Message_1 = require("../Message");
var helpers_1 = require("./helpers");
function cswCatalogGroup(item, options) {
    if (!options.partial && !dist_1.default.string(item.url)) {
        return helpers_1.nullResult(Message_1.missingRequiredProp(Message_1.ModelType.CswCatalogGroup, "url", "string", item.name));
    }
    var propsToCopy = ["url", "domainSpecification"];
    var unknownProps = helpers_1.getUnknownProps(item, __spreadArrays(helpers_1.catalogGroupProps, helpers_1.catalogGroupPropsIgnore, propsToCopy));
    var member = {
        type: "csw-group",
        name: item.name,
    };
    var messages = helpers_1.propsToWarnings(Message_1.ModelType.CswCatalogGroup, unknownProps, item.name);
    helpers_1.copyProps(item, member, __spreadArrays(helpers_1.catalogGroupProps, propsToCopy));
    if (options.copyUnknownProperties) {
        helpers_1.copyProps(item, member, unknownProps);
    }
    return {
        member: member,
        messages: messages,
    };
}
exports.cswCatalogGroup = cswCatalogGroup;
//# sourceMappingURL=Csw.js.map