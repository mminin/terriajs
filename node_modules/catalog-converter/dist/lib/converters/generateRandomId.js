"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULT_ID_LENGTH = 6;
var ALPHABET = __spreadArrays(chars("a", "z"), chars("A", "Z"), chars("0", "9")).filter(function (c) { return ["0", "O", "o"].includes(c) === false; }); // remove similar looking characters
var usedIDS = new Set();
/**
 * Generate random ID of the given length.
 * @param length
 * @returns A random Id. Uniqueness of the ID is not guaranteed.
 */
function generateRandomId(length) {
    var id = Array(length === undefined ? exports.DEFAULT_ID_LENGTH : length)
        .fill(1)
        .map(function () { return pickRandomChar(ALPHABET); })
        .join("");
    if (id === "")
        return undefined;
    // If ID isn't unique -> generate another
    if (usedIDS.has(id))
        return generateRandomId(length);
    usedIDS.add(id);
    return id;
}
exports.default = generateRandomId;
function pickRandomChar(alpahbet) {
    var randomIdx = Math.floor(Math.random() * (alpahbet.length - 1));
    return alpahbet[randomIdx];
}
function chars(firstChar, lastChar) {
    var first = firstChar.charCodeAt(0);
    var last = lastChar.charCodeAt(0);
    var chars = [];
    if (isNaN(first) ||
        isNaN(last) ||
        first >= last ||
        firstChar.length > 1 ||
        lastChar.length > 1)
        return [];
    for (var i = first; i <= last; i++) {
        chars.push(String.fromCharCode(i));
    }
    return chars;
}
//# sourceMappingURL=generateRandomId.js.map