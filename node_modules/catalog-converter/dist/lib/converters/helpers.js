"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var is_1 = __importDefault(require("@sindresorhus/is"));
var Message_1 = require("../Message");
var generateRandomId_1 = __importDefault(require("./generateRandomId"));
var mergeRecursive_1 = __importDefault(require("./mergeRecursive"));
function isNotNull(arg) {
    return arg !== null;
}
exports.isNotNull = isNotNull;
function flatMap(l, f) {
    var _a;
    return (_a = []).concat.apply(_a, l.map(f));
}
exports.flatMap = flatMap;
function nullResult() {
    var messages = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        messages[_i] = arguments[_i];
    }
    return {
        member: null,
        messages: messages,
    };
}
exports.nullResult = nullResult;
function isCatalogMember(m, partial) {
    if (partial === void 0) { partial = false; }
    return is_1.default.string(m === null || m === void 0 ? void 0 : m.type) && (is_1.default.string(m === null || m === void 0 ? void 0 : m.name) || partial);
}
exports.isCatalogMember = isCatalogMember;
exports.catalogMemberProps = [
    "id",
    "shareKeys",
    "description",
    "info",
    "infoSectionOrder",
    "initialMessage",
    "shortReport",
    {
        v7: "shortReportSections",
        v8: "shortReportSections",
        translationFn: function (srs) {
            return srs.length > 0
                ? srs.map(function (shortReport) {
                    return {
                        name: shortReport.name,
                        content: shortReport.content,
                        show: shortReport.isOpen,
                    };
                })
                : undefined;
        },
    },
    { v7: "isShown", v8: "show" },
    "splitDirection",
    "url",
    "forceProxy",
    "cacheDuration",
    {
        v7: "opacity",
        v8: "opacity",
        translationFn: function (opacity) {
            return is_1.default.nan(parseFloat(opacity)) ? undefined : parseFloat(opacity);
        },
    },
    "chartDisclaimer",
    {
        v7: "rectangle",
        v8: "rectangle",
        translationFn: function (rectangle) {
            return {
                west: parseFloat(rectangle[0]) || undefined,
                south: parseFloat(rectangle[1]) || undefined,
                east: parseFloat(rectangle[2]) || undefined,
                north: parseFloat(rectangle[3]) || undefined,
            };
        },
    },
    "currentTime",
    {
        v7: "dateFormat",
        v8: "dateFormat",
        translationFn: function (dateFormat) { var _a; return (_a = dateFormat.timelineTic) !== null && _a !== void 0 ? _a : dateFormat.currentTime; },
    },
    "disablePreview",
    "hideSource",
    // Note: if v7 initialTimeSource is not "present", "start", or "end" -> set to v8 currentTime property
    {
        v7: "initialTimeSource",
        v8: "initialTimeSource",
        translationFn: function (initialTimeSource) {
            return ({
                present: "now",
                start: "start",
                end: "stop",
            }[initialTimeSource]);
        },
    },
    {
        v7: "initialTimeSource",
        v8: "currentTime",
        translationFn: function (initialTimeSource) {
            return !["now", "start", "end"].includes(initialTimeSource)
                ? initialTimeSource
                : undefined;
        },
    },
    "dataCustodian",
    {
        v7: "isLegendVisible",
        v8: "isOpenInWorkbench",
    },
    "clipToRectangle",
];
exports.catalogGroupProps = __spreadArrays(exports.catalogMemberProps, ["isOpen"]);
exports.imageryLayerProps = ["keepOnTop"];
exports.catalogMemberPropsIgnore = [
    "name",
    "type",
    "parents",
    "isEnabled",
];
exports.catalogGroupPropsIgnore = __spreadArrays(exports.catalogMemberPropsIgnore, [
    "items",
    "preserveOrder",
]);
function getUnknownProps(o, knownProperties) {
    return Object.keys(o).filter(function (prop) {
        return knownProperties.findIndex(function (knownProp) {
            return typeof knownProp === "string"
                ? knownProp === prop
                : knownProp.v7 === prop;
        }) === -1;
    });
}
exports.getUnknownProps = getUnknownProps;
function propsToWarnings(modelType, properties, label) {
    return properties.map(function (prop) { return Message_1.unknownProp(modelType, prop, label); });
}
exports.propsToWarnings = propsToWarnings;
function copyProps(source, destination, properties) {
    properties.forEach(function (prop) {
        var propV7 = is_1.default.string(prop) ? prop : prop.v7;
        var propV8 = is_1.default.string(prop) ? prop : prop.v8;
        if (Object.prototype.hasOwnProperty.call(source, propV7)) {
            var value = !is_1.default.string(prop) && typeof prop.translationFn === "function"
                ? prop.translationFn(source[propV7])
                : source[propV7];
            if (typeof value !== "undefined")
                destination[propV8] = value;
        }
    });
    return destination;
}
exports.copyProps = copyProps;
exports.legendProps = ["legendUrl", "legendUrls"];
function legends(modelType, label, source) {
    var legendUrls = new Set();
    if (typeof source.legendUrl === "string")
        legendUrls.add(source.legendUrl);
    if (Array.isArray(source.legendUrls))
        source.legendUrls
            .filter(function (legendUrl) { return typeof legendUrl === "string"; })
            .forEach(function (legendUrl) { return legendUrls.add(legendUrl); });
    var result = Array.from(legendUrls).map(function (url) {
        return { url: url };
    });
    return {
        result: result.length > 0 ? result : undefined,
        messages: [],
    };
}
exports.legends = legends;
function featureInfoTemplate(modelType, label, template) {
    if (is_1.default.string(template)) {
        return {
            result: {
                template: template,
            },
            messages: [],
        };
    }
    else {
        var result = {};
        var propsToCopy = ["name", "template", "partials", "formats"];
        var unknownProps = getUnknownProps(template, propsToCopy);
        var extraPropsMessages = propsToWarnings(modelType, unknownProps.map(function (prop) { return "featureInfoTemplate." + prop; }), label);
        copyProps(template, result, propsToCopy);
        return {
            result: result,
            messages: extraPropsMessages,
        };
    }
}
exports.featureInfoTemplate = featureInfoTemplate;
// Inject dependency to remove circular dependency
// Pull code shared between group and top-level catalog into a function
function convertMembersArrayWithConvertMember(convertMember) {
    return function convertMembersArray(members, label, options) {
        var v7Merged = mergeRecursive_1.default(members);
        var results = v7Merged.map(function (m) {
            var res = convertMember(m, options);
            // Push the member to `enabledItemsAccumulator` if it is enabled.
            if (options.enabledItemsAccumulator && res.member && m.isEnabled)
                options.enabledItemsAccumulator.push(res.member);
            return res;
        });
        var convertedMembers = results
            .map(function (_a) {
            var member = _a.member;
            return member && options.generateIds && !member.id
                ? __assign(__assign({}, member), { id: generateRandomId_1.default(options.idLength) }) : member;
        })
            .filter(isNotNull);
        return {
            members: convertedMembers,
            messages: flatMap(results, function (_a) {
                var messages = _a.messages;
                return messages;
            }).map(function (message) { return (__assign(__assign({}, message), { path: __spreadArrays([label], message.path) })); }),
        };
    };
}
exports.convertMembersArrayWithConvertMember = convertMembersArrayWithConvertMember;
function itemProperties(item, converter, options) {
    // Modify name property to make messages sensible
    var itemPropertiesResult = converter(__assign(__assign({}, item.itemProperties), { name: item.name + ".itemProperties" }), Object.assign({}, options, {
        partial: true,
        generateIds: false,
    }));
    var itemProperties = itemPropertiesResult.member;
    if (itemProperties) {
        delete itemProperties.name;
        delete itemProperties.type;
    }
    var itemPropertiesMessages = itemPropertiesResult.messages.map(function (m) {
        return __assign(__assign({}, m), { path: __spreadArrays([item.name], m.path) });
    });
    return { messages: itemPropertiesMessages, result: itemProperties };
}
exports.itemProperties = itemProperties;
// Stolen from https://stackoverflow.com/a/42736367
function clearEmpties(o) {
    for (var k in o) {
        if (!o[k] || typeof o[k] !== "object") {
            continue; // If null or not an object, skip to the next iteration
        }
        // The property is an object
        clearEmpties(o[k]); // <-- Make a recursive call on the nested object
        if (Object.keys(o[k]).length === 0) {
            delete o[k]; // The object had no properties, so delete that property
        }
    }
}
exports.clearEmpties = clearEmpties;
//# sourceMappingURL=helpers.js.map