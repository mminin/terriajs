export declare enum Severity {
    Error = 0,
    Warning = 1
}
export declare enum ModelType {
    Share = "Share",
    Member = "CatalogMember",
    Group = "CatalogGroup",
    WmsItem = "WebMapServiceCatalogItem",
    WmsGroup = "WebMapServiceCatalogGroup",
    WfsGroup = "WebFeatureServiceCatalogGroup",
    CsvItem = "CsvCatalogItem",
    SosItem = "SensorObservationServiceCatalogItem",
    CswCatalogGroup = "CswCatalogGroup",
    EsriCatalogGroup = "EsriCatalogGroup",
    EsriMapServerGroup = "EsriMapServerGroup",
    EsriMapServerItem = "EsriMapServerCatalogItem",
    EsriFeatureServerItem = "EsriFeatureServerCatalogItem",
    WpsItem = "WpsItem",
    WpsResultItem = "WpsResultItem",
    WpsGroup = "WpsGroup",
    CkanGroup = "CkanCatalogGroup",
    CkanCatalogItem = "CkanCatalogItem",
    GeoJsonItem = "GeoJsonCatalogItem",
    CartoMapCatalogItem = "CartoMapCatalogItem",
    MapboxVectorTileCatalogItem = "MapboxVectorTileCatalogItem",
    KmlCatalogItem = "KmlCatalogItem",
    SocrataCatalogGroup = "SocrataCatalogGroup"
}
interface MessageBase {
    readonly message: string;
    readonly path: string[];
    readonly severity: Severity;
}
export interface UnknownPropDetails {
    readonly modelType: ModelType;
    readonly property: string;
}
export interface MissingRequiredPropDetails {
    readonly modelType: ModelType;
    readonly property: string | string[];
    readonly requiredType?: string;
}
export interface UnknownTypeDetails {
    readonly type: string;
}
export interface InputNotPlainObjectDetails {
}
export declare const unknownPropOpaque: {
    toOpaque: (value: UnknownPropDetails) => import("@iadvize-oss/opaque-type").Opaque<"UnknownProp">;
    fromOpaque: (opaque: import("@iadvize-oss/opaque-type").Opaque<"UnknownProp">) => UnknownPropDetails;
    isOpaque: (thing: any) => thing is import("@iadvize-oss/opaque-type").Opaque<"UnknownProp">;
};
export interface UnknownProp extends MessageBase {
    details: ReturnType<typeof unknownPropOpaque.toOpaque>;
}
export declare function isUnknownProp(m: Message): m is UnknownProp;
declare const missingRequiredPropOpaque: {
    toOpaque: (value: MissingRequiredPropDetails) => import("@iadvize-oss/opaque-type").Opaque<"MissingRequiredProp">;
    fromOpaque: (opaque: import("@iadvize-oss/opaque-type").Opaque<"MissingRequiredProp">) => MissingRequiredPropDetails;
    isOpaque: (thing: any) => thing is import("@iadvize-oss/opaque-type").Opaque<"MissingRequiredProp">;
};
export interface MissingRequiredProp extends MessageBase {
    details: ReturnType<typeof missingRequiredPropOpaque.toOpaque>;
}
export declare function isMissingRequiredProp(m: Message): m is MissingRequiredProp;
declare const unknownTypeOpaque: {
    toOpaque: (value: UnknownTypeDetails) => import("@iadvize-oss/opaque-type").Opaque<"UnknownType">;
    fromOpaque: (opaque: import("@iadvize-oss/opaque-type").Opaque<"UnknownType">) => UnknownTypeDetails;
    isOpaque: (thing: any) => thing is import("@iadvize-oss/opaque-type").Opaque<"UnknownType">;
};
export interface UnknownType extends MessageBase {
    details: ReturnType<typeof unknownTypeOpaque.toOpaque>;
}
export declare function isUnknownType(m: Message): m is UnknownType;
declare const inputNotPlainObjectOpaque: {
    toOpaque: (value: InputNotPlainObjectDetails) => import("@iadvize-oss/opaque-type").Opaque<"InputNotPlainObject">;
    fromOpaque: (opaque: import("@iadvize-oss/opaque-type").Opaque<"InputNotPlainObject">) => InputNotPlainObjectDetails;
    isOpaque: (thing: any) => thing is import("@iadvize-oss/opaque-type").Opaque<"InputNotPlainObject">;
};
export interface InputNotPlainObject extends MessageBase {
    details: ReturnType<typeof inputNotPlainObjectOpaque.toOpaque>;
}
export declare function isInputNotPlainObject(m: Message): m is InputNotPlainObject;
export declare type Message = UnknownProp | MissingRequiredProp | UnknownType | InputNotPlainObject;
export declare function unknownProp(modelType: ModelType, property: string, label: string, severity?: Severity): UnknownProp;
export declare function missingRequiredProp(modelType: ModelType, property: string | string[], requiredType: string | undefined, label: string, severity?: Severity): MissingRequiredProp;
export declare function unknownType(type: string, label: string, severity?: Severity): UnknownType;
export declare function inputNotPlainObject(): InputNotPlainObject;
export declare function getUnknownPropDetails(m: UnknownProp): UnknownPropDetails;
export declare function getMissingRequiredPropDetails(m: MissingRequiredProp): MissingRequiredPropDetails;
export declare function getUnknownTypeDetails(m: UnknownType): UnknownTypeDetails;
export declare function getInputNotPlainObjectDetails(m: InputNotPlainObject): InputNotPlainObjectDetails;
export declare const foldMessage: {
    <R>(funcs: {
        isUnknownProp: import("@iadvize-oss/foldable-helpers/dist/types").Func<UnknownProp, R>;
        isUnknownType: import("@iadvize-oss/foldable-helpers/dist/types").Func<UnknownType, R>;
        isMissingRequiredProp: import("@iadvize-oss/foldable-helpers/dist/types").Func<MissingRequiredProp, R>;
        isInputNotPlainObject: import("@iadvize-oss/foldable-helpers/dist/types").Func<InputNotPlainObject, R>;
    }): (s: Message) => R;
    <R_1, S extends Message>(funcs: {
        isUnknownProp: import("@iadvize-oss/foldable-helpers/dist/types").Func<Extract<S, UnknownProp>, R_1>;
        isUnknownType: import("@iadvize-oss/foldable-helpers/dist/types").Func<Extract<S, UnknownType>, R_1>;
        isMissingRequiredProp: import("@iadvize-oss/foldable-helpers/dist/types").Func<Extract<S, MissingRequiredProp>, R_1>;
        isInputNotPlainObject: import("@iadvize-oss/foldable-helpers/dist/types").Func<Extract<S, InputNotPlainObject>, R_1>;
    }): (s: S) => R_1;
};
export {};
